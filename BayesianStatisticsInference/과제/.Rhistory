mu_posterior <- (sigma2_0 * x_bar + sigma2 * mu0) / (sigma2_0 + n * sigma2)
# 사후분포의 분산
sigma2_posterior_inverse <- n / sigma2 + 1 / sigma2_0
sigma2_posterior <- 1 / sigma2_posterior_inverse
# 결과 출력
cat("사후분포의 평균:", mu_posterior, "\n")
cat("사후분포의 분산:", sigma2_posterior, "\n")
# 결과 출력
cat("사후분포의 평균:", mu_posterior, "\n")
#prior
mu0 = 100; sig0 = 5; n = 10; xbar = 110; s = sqrt(10/n)
#posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
ta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
lines(theta,dnorm(theta,mu0,sig0),lty=2)
legend(7.5,0.3,legend=c("posterior","prior"),lty=c(1,2),bty="n")
#predictive
mu.new = mu.post; sig.new = sqrt( s^2 + sig.post^2 )
xnew=seq(mu.new - 5* sig.new , mu.new + 5* sig.new, length=100)
plot(xnew, dnorm(xnew, mu.new, sig.new),type="l", main="Predictivedensity of X_new")
#prior
mu0 = 100; sig0 = 5; n = 10; xbar = 110; s = sqrt(10/n)
#posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
lines(theta,dnorm(theta,mu0,sig0),lty=2)
legend(7.5,0.3,legend=c("posterior","prior"),lty=c(1,2),bty="n")
#predictive
mu.new = mu.post; sig.new = sqrt( s^2 + sig.post^2 )
xnew=seq(mu.new - 5* sig.new , mu.new + 5* sig.new, length=100)
plot(xnew, dnorm(xnew, mu.new, sig.new),type="l", main="Predictivedensity of X_new")
#prior
mu0 = 100; sig0 = 5; n = 10; xbar = 110; s = sqrt(10/n)
#posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
lines(theta,dnorm(theta,mu0,sig0),lty=2)
legend(7.5,0.3,legend=c("posterior","prior"),lty=c(1,2),bty="n")
#predictive
mu.new = mu.post; sig.new = sqrt( s^2 + sig.post^2 )
xnew=seq(mu.new - 5* sig.new , mu.new + 5* sig.new, length=100)
mu.new
xnew
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
lines(theta,dnorm(theta,mu0,sig0),lty=2)
#prior
mu0 = 100; sig0 = 5; n = 10; xbar = 110; s = sqrt(10/n)
#posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
# Call plot.new() before creating a plot
plot.new()
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
lines(theta,dnorm(theta,mu0,sig0),lty=2)
#predictive
mu.new = mu.post; sig.new = sqrt( s^2 + sig.post^2 )
xnew=seq(mu.new - 5* sig.new , mu.new + 5* sig.new, length=100)
# Call plot.new() again before creating a new plot
plot.new()
plot(xnew, dnorm(xnew, mu.new, sig.new),type="l", main="Predictive density of X_new")
mu0 = 100; sig0 = 5; n = 10; xbar = 110; s = sqrt(10/n)
#posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
lines(theta,dnorm(theta,mu0,sig0),lty=2)
legend(7.5,0.3,legend=c("posterior","prior"),lty=c(1,2),bty="n")
#predictive
mu.new = mu.post; sig.new = sqrt( s^2 + sig.post^2 )
xnew=seq(mu.new - 5* sig.new , mu.new + 5* sig.new, length=100)
mu.post
theta
mu.post
sig.post
mu.post
sig.post
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend(7.5,0.3,legend=c("posterior","prior"),lty=c(1,2),bty="n")
# prior
mu0 = 100; sig0 = 5; n = 10; xbar = 110; s = sqrt(10/n)
# posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend(7.5,0.3,legend=c("posterior","prior"),lty=c(1,2),bty="n")
# prior
mu0 = 150; sig0 = sqrt(21); n = 20; xbar = 150; s = sqrt(21/n)
# posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend(7.5,0.3,legend=c("posterior","prior"),lty=c(1,2),bty="n")
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend(7.5,0.3,legend=c("posterior"),lty=c(1,2),bty="n")
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend(7.5,0.3,legend=c("posterior"),lty=c(1,2),bty="n")
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend(7.5,0.3,legend=c("posterior"),lty=c(1),bty="n")
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend(7.5,0.3,legend=c("posterior"),lty=1,bty="n")
legend(7.5,0.3,legend=c("posterior"),lty= 1,bty="n")
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend(7.5,0.3,legend=c("posterior"),lty= 1,bty="n")
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend(7.5,0.3,legend=c("posterior"),lty= c(1),bty="n")
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend("topright",legend=c("posterior"),lty=c(1),bty="n")
mu.post
sig.post
# prior
mu0 = 150; sig0 = sqrt(21); n = 20; xbar = 150; s = sqrt(21)
# posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend("topright",legend=c("posterior"),lty=c(1),bty="n")
```{r}
mu.post
sig.post
# Plotting only the posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
legend("topright",legend="posterior",lty=1,bty="n")
# prior
mu0 = 150; sig0 = sqrt(21); n = 20; xbar = 150; s = sqrt(21/n)
# posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
# Data frame for ggplot
df <- data.frame(theta=theta, density=dnorm(theta, mu.post, sig.post))
# Plot using ggplot
ggplot(data=df, aes(x=theta, y=density)) +
geom_line(color="blue") +
labs(title="Posterior of theta", y="Density") +
theme_minimal() +
annotate("text", x=max(df$theta) - 20, y=max(df$density) - 0.01, label="posterior", hjust="right")
legend("topright",legend="posterior",lty=c(1),bty="n")
legend("topright",legend="posterior",lty=c('1'),bty="n")
# Plotting only the posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
legend("topright",legend="posterior",lty=c('1'),bty="n")
# Plotting only the posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
legend("topright", legend=c("Random data"), col="red", lty=2, cex=0.8, bty="o")
# prior
mu0 = 150; sig0 = sqrt(21); n = 20; xbar = 150; s = sqrt(21/n)
# posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
# Data frame for ggplot
df <- data.frame(theta=theta, density=dnorm(theta, mu.post, sig.post))
# Plotting only the posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
legend("topright", legend=c("Random data"), col="red", lty=2, cex=0.8, bty="o")
legend("topright",legend="posterior",lty=c(1),bty="n")
# Plotting only the posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
legend("topright",legend="posterior",lty=c(1),bty="n")
# Plotting only the posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
legend("topright",legend="posterior",lty=c(1),bty="n")
# Plotting only the posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
legend("topright",legend="posterior",lty=c(1),bty="n")
HPDgrid(theta)
HPDgrid <- function(prob,level=0.95){
prob.sort=sort(prob,decreasing = T)
M=min(which(cumsum(prob.sort)>=level))
height=prob.sort[M]
HPD.index=which(prob>=height)
HPD.level=sum(prob[HPD.index])
res=list(index=HPD.index, level=HPD.level)
return(res)
}
HPDgrid(theta)
dnorm(theta, mu.post, sig.post)
dt
dt
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
dt = dnorm(theta, mu.post, sig.post)
dt
propdt = dt/sum(dt)
propdt
HPDgrid(propdt, 0.95)
HPD <- HPDgrid(propdt, 0.95)
HPD
2-(1)
```{r}
# prior
mu0 = 150; sig0 = sqrt(21); n = 20; xbar = 150; s = sqrt(21/n)
# posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
ftheta = dnorm(theta, mu.post, sig.post)
prob = dt/sum(dt)
# Plotting only the posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
legend("topright",legend="posterior",lty=c(1),bty="n")
HPDgrid <- function(prob,level=0.95){
prob.sort=sort(prob,decreasing = T)
M=min(which(cumsum(prob.sort)>=level))
height=prob.sort[M]
HPD.index=which(prob>=height)
HPD.level=sum(prob[HPD.index])
res=list(index=HPD.index, level=HPD.level)
return(res)
}
HPD <- HPDgrid(prob, 0.95)
HPD.grid=c( min(theta[HPD$index]), max(theta[HPD$index]) )
HPD.grid
prob = dt/sum(ftheta)
HPDgrid <- function(prob,level=0.95){
prob.sort=sort(prob,decreasing = T)
M=min(which(cumsum(prob.sort)>=level))
height=prob.sort[M]
HPD.index=which(prob>=height)
HPD.level=sum(prob[HPD.index])
res=list(index=HPD.index, level=HPD.level)
return(res)
}
HPD <- HPDgrid(prob, 0.95)
HPD.grid=c( min(theta[HPD$index]), max(theta[HPD$index]) )
HPD <- HPDgrid(prob, 0.95)
HPD.grid=c( min(theta[HPD$index]), max(theta[HPD$index]) )
HPD.grid
# Plotting only the posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
legend("topright",legend="posterior",lty=c(1),bty="n")
abline(v=HPD, lty=2, color = 'red')
abline(v=HPD, lty=2, col = 'red')
print(HPD)
HPD.grid
# No prior information: setting a vague prior
n = 20; xbar = 150; s = sqrt(21/n)
# posterior calculation remains the same
mu.post = xbar; sig.post = sqrt(1/n)
sig.post
mu.post
sig.post
# No prior information: setting a vague prior
n = 20; xbar = 150; s = sqrt(21/n)
# posterior calculation remains the same
mu.post = xbar; sig.post = sqrt(1/n)
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
ftheta = dnorm(theta, mu.post, sig.post)
prob = ftheta/sum(ftheta)
HPD <- HPDgrid(prob, 0.95)
HPD.grid=c( min(theta[HPD$index]), max(theta[HPD$index]) )
HPD.grid
# Plotting only the posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
abline(v=HPD.grid, lty=2, col="red")
legend("topright",legend="posterior",lty=c(1),bty="n")
HPD.grid
150 - 1.96 * s
HPD.grid
150 - 1.96 * s
150 + 1.96 * s
HPD.grid <- c(150 - 1.96 * s, 150 + 1.96 * s)
HPD.grid
HPD.grid
HPD.grid
# posterior calculation remains the same
mu.post = xbar; sig.post = sqrt(21/n)
sig.post
# 첫 번째 그래프 그리기
p1
# 첫 번째 그래프 그리기
p1
# prior
mu0 = 150; sig0 = sqrt(21); n = 20; xbar = 150; s = sqrt(21/n)
# posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
ftheta = dnorm(theta, mu.post, sig.post)
prob = ftheta/sum(ftheta)
HPDgrid <- function(prob,level=0.95){
prob.sort=sort(prob,decreasing = T)
M=min(which(cumsum(prob.sort)>=level))
height=prob.sort[M]
HPD.index=which(prob>=height)
HPD.level=sum(prob[HPD.index])
res=list(index=HPD.index, level=HPD.level)
return(res)
}
HPD <- HPDgrid(prob, 0.95)
HPD.grid=c( min(theta[HPD$index]), max(theta[HPD$index]) )
HPD.grid
# Plotting only the posterior distribution
p1 <- plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
abline(v=HPD.grid, lty=2, col="red")
# 첫 번째 그래프 그리기
p1
p1
# No prior information: setting a vague prior
n = 20; xbar = 150; s = sqrt(21/n)
# posterior calculation remains the same
mu.post_2 = xbar; sig.post_2 = sqrt(21/n)
theta_2=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
ftheta = dnorm(theta, mu.post, sig.post)
prob = ftheta/sum(ftheta)
HPD <- HPDgrid(prob, 0.95)
HPD.grid_2=c( min(theta[HPD$index]), max(theta[HPD$index]) )
HPD.grid_2
plot(theta_2, dnorm(theta_2,mu.post_2, sig.post_2), type="l",main="Posterior of theta", ylab="Density")
#predictive
mu.new = mu.post; sig.new = sqrt( s^2 + sig.post^2 )
xnew=seq(mu.new - 5* sig.new , mu.new + 5* sig.new, length=100)
plot(xnew, dnorm(xnew, mu.new, sig.new),type="l", main="Predictivedensity of X_new")
mu.post_2
sig.post_2
sig.post
# prior
mu0 = 150; sig0 = sqrt(21); n = 20 + 10; xbar = 150; s = sqrt(21/n)
```{r}
#predictive
mu.new = mu.post; sig.new = sqrt( s^2 + sig.post^2 )
xnew=seq(mu.new - 5* sig.new , mu.new + 5* sig.new, length=100)
plot(xnew, dnorm(xnew, mu.new, sig.new),type="l", main="Predictivedensity of X_new")
sig.new
prob = pnorm(153, mu.new, sig.new) - pnorm(150, mu.new, sig.new)
prob
# prior
mu0 = 150; sig0 = sqrt(21); n = 20; xbar = 150; s = sqrt(21/n)
# posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
```{r}
#predictive
mu.new = mu.post; sig.new = sqrt( s^2 + sig.post^2 )
xnew=seq(mu.new - 5* sig.new , mu.new + 5* sig.new, length=100)
plot(xnew, dnorm(xnew, mu.new, sig.new),type="l", main="Predictivedensity of X_new")
prob = pnorm(153, mu.new, sig.new) - pnorm(150, mu.new, sig.new)
prob
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
par(new=TRUE)
plot(theta_2, dnorm(theta_2,mu.post_2, sig.post_2), type="l",main="Posterior of theta", ylab="Density")
library(msm)
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
par(new=TRUE)
plot(theta_2, dnorm(theta_2,mu.post_2, sig.post_2), type="l",main="Posterior of theta", ylab="Density")
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
# First posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l", main="Posterior of theta", ylab="Density")
plot(theta_2, dnorm(theta_2,mu.post_2, sig.post_2), type="l", axes=FALSE, xlab='', ylab='', col="red") # Assuming you want the second distribution in red color
# No prior information: setting a vague prior
n = 20; xbar = 150; s = sqrt(21/n)
# posterior calculation remains the same
mu.post_2 = xbar; sig.post_2 = sqrt(21/n)
theta_2=seq(mu.post_2-5*sig.post_2, mu.post_2+5*sig.post_2, length=100)
ftheta = dnorm(theta_2, mu.post_2, sig.post_2)
prob = ftheta/sum(ftheta)
HPD <- HPDgrid(prob, 0.95)
HPD.grid_2=c( min(theta_2[HPD$index]), max(theta_2[HPD$index]) )
HPD.grid_2
# 데이터 프레임 생성
df <- data.frame(
theta = c(theta_2, theta_2),
density = c(dnorm(theta_2, mu.post_2, sig.post_2), rep(NA, length(theta_2)))
)
# ggplot 그래프 생성
g <- ggplot(df, aes(x=theta, y=density)) +
geom_line(aes(y = dnorm(theta, mu.post_2, sig.post_2)), colour="black") +
geom_vline(aes(xintercept=HPD.grid_2[1]), linetype="dashed", color="red") +
geom_vline(aes(xintercept=HPD.grid_2[2]), linetype="dashed", color="red") +
labs(title="Posterior of theta", y="Density", x="theta_2") +
theme_minimal()
theta <- seq(0, 1, length = 100)
theta
ftheta <- debeta(theta, 3, 9)
theta <- seq(0, 1, length = 100)
ftheta <- debeta(theta, 3, 9)
ftheta <- dbeta(theta, 3, 9)
ftheta
plot(theta, ftheta, type="I")
theta <- seq(0, 1, length = 100)
ftheta <- dbeta(theta, 3, 9)
plot(theta, ftheta, type="I")
plot(theta, ftheta, type="l")
plot(theta, ftheta, type="l", xlab="theta", ylab="f(theta)")
# 95%신뢰구간
abline(v = qbeta(c(0.025, 0.975),3, 9))
ftheta <- dbeta(theta, 5, 5)
plot(theta, ftheta, type="l", xlab="theta", ylab="f(theta)")
plot(theta, ftheta, type="l", xlab="theta", ylab="f(theta)")
# 95%신뢰구간
abline(v = qbeta(c(0.025, 0.975),3, 9))
ftheta <- dbeta(theta, 5, 5)
plot(theta, ftheta, type="l", xlab="theta", ylab="f(theta)")
lines(theta, ftheta,lty=2)
ftheta <- dbeta(theta, 5, 5)
plot(theta, ftheta, type="l", xlab="theta", ylab="f(theta)")
lines(theta, ftheta,lty=2)
plot(theta, ftheta, type="l", xlab="theta", ylab="f(theta)")
ftheta <- dbeta(theta, 5, 5)
plot(theta, ftheta, type="l", xlab="theta", ylab="f(theta)")
lines(theta, ftheta,lty=2)
plot(theta, ftheta, type="l", xlab="theta", ylab="f(theta)")
lines(theta, ftheta,lty=2)
plot(theta, ftheta, type="l", xlab="theta", ylab="f(theta)")
lines(theta, ftheta,lty=2)
lines(theta, ftheta,lty=3)
lines(theta, ftheta,lty=2)
text(0.8, 0.6, "Beta(5,5)")
text(0.3, 3.0, "Beta(3,9)")
text(0.8, 0.6, "Beta(5,5)")
text(0.3, 3.0, "Beta(3,9)")
lines(theta, ftheta,lty=2)
text(0.8, 0.6, "Beta(5,5)")
text(0.3, 3.0, "Beta(3,9)")
text(0.3, 3.0, "Beta(3,9)")
ftheta <- dbeta(theta, 5, 5)
plot(theta, ftheta, type="l", xlab="theta", ylab="f(theta)")
lines(theta, ftheta,lty=2)
text(0.8, 0.6, "Beta(5,5)")
text(0.3, 3.0, "Beta(3,9)")
theta <- seq(0, 1, length = 100)
ftheta <- dbeta(theta, 3, 9)
plot(theta, ftheta, type="l", xlab="theta", ylab="f(theta)")
# 95%신뢰구간
abline(v = qbeta(c(0.025, 0.975),3, 9))
ftheta2 <- dbeta(theta, 5, 5)
plot(theta, ftheta, type="l", xlab="theta", ylab="f(theta)")
lines(theta, ftheta2,lty=2)
text(0.8, 0.6, "Beta(5,5)")
text(0.3, 3.0, "Beta(3,9)")
text(0.3, 4.0, "Beta(3,9)")
text(0.3, 5.0, "Beta(3,9)")
ftheta2 <- dbeta(theta, 5, 5)
plot(theta, ftheta, type="l", xlab="theta", ylab="f(theta)")
lines(theta, ftheta2,lty=2)
text(0.8, 0.6, "Beta(5,5)")
text(0.3, 3.0, "Beta(3,9)")
x <- rnorm(100)
hist(x, prob=T, xlab=expression(theta))
y <- seq(-3, 3, length=100)
y
x <- rnorm(100)
hist(x, prob=T, xlab=expression(theta))
y <- seq(-3, 3, length=100)
lines(y, dnorm(y)) # dnorm(y) = density of N(0, 1) at y
x <- rnorm(100)
hist(x, prob=T, xlab=expression(theta))
y <- seq(-3, 3, length=100)
x <- rnorm(10000)
hist(x, prob=T, xlab=expression(theta))
y <- seq(-3, 3, length=100)
lines(y, dnorm(y)) # dnorm(y) = density of N(0, 1) at y
################################################################
#############################P25################################
################################################################
y <- c(0:11)
y
fy <- dpois(y, 2) # Poisson(2) density at y
################################################################
#############################P25################################
################################################################
y <- c(0:11)
fy <- dpois(y, 2) # Poisson(2) density at y
fy
yy <- c(0:100)
yy
fyy <- dpois(yy, 20)
par(mfrow=c(1,2))
plot(y, fy, type = "h")
plot(yy, fyy, type = "h")
################################################################
#############################P26################################
################################################################
#다변량정규난수 생성
rmvnorm <- function(n, mu, sig){
p = length(mu)
R = chol(sig)
z = matrix(rnorm(n*p), n, p )
tt = z %>% R + matrix(mu, n, p, byrow =T)
ruturn(tt)
}
theta <- seq(0, 1, length = 100)
ftheta <- dbeta(theta, 2, 7)
ftheta
theta <- seq(0, 1, length = 100)
ftheta <- dbeta(theta, 2, 7)
plot(theta, ftheta, type = "l", xlab="theta", ylab="f(theta")
par(mfrow=c(1,1))
theta <- seq(0, 1, length = 100)
ftheta <- dbeta(theta, 2, 7)
plot(theta, ftheta, type = "l", xlab="theta", ylab="f(theta")
abline(v = qbeta(c(0.025, 0.975), 2, 7))
knitr::opts_chunk$set(echo = TRUE)
prob = ftheta/sum(ftheta)
HPD <- HPDgrid(prob,0.95)
HPD.grid <- c(min(theta[HPD$index]), max(theta[HPD$index]))
HPD.grid
plot(theta, posterior, type = "l", xlab = "theta", ylab = "density", main = "Posterior")
plot(theta, posterior, type = "l", xlab = "theta", ylab = "density", main = "Posterior")
prob = posterior/sum(posterior)
HPD <- HPDgrid(prob,0.95)
