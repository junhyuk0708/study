posterior <- function(theta, data) {
likelihood <- prod(dpois(data, lambda=theta))
prior <- sqrt(1/theta)
return(likelihood * prior)
}
# 주어진 데이터
data <- c(3, 2, 4, 3, 2, 1)
# 그래프를 그리기 위해 theta 값의 시퀀스 생성하기
theta_vals <- seq(0.01, 10, length.out=1000)
# 각 theta에 대한 사후 확률 값 계산하기
posterior_vals <- sapply(theta_vals, function(t) posterior(t, data))
# 사후 확률 값을 정규화하여 적절한 분포로 만들기
posterior_vals <- posterior_vals / sum(posterior_vals)
# 사후 확률 그리기
df <- data.frame(theta=theta_vals, posterior=posterior_vals)
# 주어진 df 데이터프레임에 Jeffrey의 사전 확률 분포 값을 추가
df$prior <- 1/sqrt(df$theta)
# ggplot을 사용하여 사후 확률 분포와 사전 확률 분포 그리기
ggplot(df, aes(x=theta)) +
geom_line(aes(y=posterior), color="blue") +  # 사후 확률 분포
geom_line(aes(y=prior), linetype="dashed", color="red") +  # Jeffrey의 사전 확률 분포
theme_minimal() +
labs(title="Theta의 사후 확률 분포와 사전 확률 분포", x="Theta", y="밀도") +
scale_y_continuous(name="밀도", sec.axis=sec_axis(~., name="밀도"))
# 파라미터 및 데이터 설정
a = 1/2
b = 0
x <- c(3,2,4,3,2,1)
n = length(x)
s = sum(x)
# theta 값의 범위 설정
theta = seq(0.01, 6, length=100)
# 데이터 프레임 생성
df <- data.frame(
theta = theta,
posterior = dgamma(theta, a+s, b+n),
jeffreys_prior = 1/sqrt(theta)
)
# ggplot을 사용하여 그래프 그리기
ggplot(df, aes(x = theta)) +
geom_line(aes(y = posterior, color = "사후 확률 분포")) +
geom_line(aes(y = jeffreys_prior, color = "Jeffrey 사전 확률 분포"), linetype = "dashed") +
labs(title = "Theta에 대한 확률 분포", x = "theta", y = "p(theta | x)") +
theme_minimal() +
scale_color_manual(values = c("사후 확률 분포" = "blue", "Jeffrey 사전 확률 분포" = "red")) +
theme(legend.title = element_blank())
# 파라미터 및 데이터 설정
a = 1/2
b = 0
x <- c(3,2,4,3,2,1)
n = length(x)
s = sum(x)
# theta 값의 범위 설정
theta <- seq(0, 5, length=100)
# 데이터 프레임 생성
df <- data.frame(
theta = theta,
posterior = dgamma(theta, a+s, b+n),
jeffreys_prior = 1/sqrt(theta)
)
# ggplot을 사용하여 그래프 그리기
ggplot(df, aes(x = theta)) +
geom_line(aes(y = posterior, color = "사후 확률 분포")) +
geom_line(aes(y = jeffreys_prior, color = "Jeffrey 사전 확률 분포"), linetype = "dashed") +
labs(title = "Theta에 대한 확률 분포", x = "theta", y = "p(theta | x)") +
theme_minimal() +
scale_color_manual(values = c("사후 확률 분포" = "blue", "Jeffrey 사전 확률 분포" = "red")) +
theme(legend.title = element_blank())
# ggplot을 사용하여 그래프 그리기
ggplot(df, aes(x = theta)) +
geom_line(aes(y = posterior, color = "사후 확률 분포")) +
geom_line(aes(y = jeffreys_prior, color = "Jeffrey 사전 확률 분포"), linetype = "dashed") +
labs(title = "Theta에 대한 확률 분포", x = "theta", y = "p(theta | x)") +
theme_minimal() +
scale_color_manual(values = c("사후 확률 분포" = "blue", "Jeffrey 사전 확률 분포" = "red")) +
theme(legend.title = element_blank())
# 파라미터 및 데이터 설정
a = 1/2
b = 0
x <- c(3,2,4,3,2,1)
n = length(x)
s = sum(x)
# theta 값의 범위 설정
theta <- seq(0, 6, length=100)
# 데이터 프레임 생성
df <- data.frame(
theta = theta,
posterior = dgamma(theta, a+s, b+n),
jeffreys_prior = 1/sqrt(theta)
)
# ggplot을 사용하여 그래프 그리기
ggplot(df, aes(x = theta)) +
geom_line(aes(y = posterior, color = "사후 확률 분포")) +
geom_line(aes(y = jeffreys_prior, color = "Jeffrey 사전 확률 분포"), linetype = "dashed") +
labs(title = "Theta에 대한 확률 분포", x = "theta", y = "p(theta | x)") +
theme_minimal() +
scale_color_manual(values = c("사후 확률 분포" = "blue", "Jeffrey 사전 확률 분포" = "red")) +
theme(legend.title = element_blank())
=======
# 후유증을 보인 환자 수와 총 환자 수
x <- 3  # 성공 (후유증을 보인 환자 수)
n <- 12  # 시도 (총 환자 수)
# 사전 확률의 매개변수 (Beta 분포)
alpha_prior <- 1  # 균등분포로 가정
beta_prior <- 1
# 사후 확률의 매개변수
alpha_post <- alpha_prior + x
beta_post <- beta_prior + n - x
# 사후 확률로부터 샘플링하여 13번째 환자가 후유증을 보일 확률을 계산
set.seed(123)  # 재현 가능한 결과를 위한 시드 설정
samples <- rbeta(100000, alpha_post, beta_post)  # 사후 분포로부터 샘플 추출
# 13번째 환자가 후유증을 보일 확률의 추정
prob_new_patient <- mean(samples)
# 결과 출력
print(paste("13번째 환자가 후유증을 보일 추정 확률: ", round(prob_new_patient, 4)))
gamma(11.1)*gamma(21)/gamma(32.1)/(gamma(0.1)*gamma(11)/gamma(11.1))
install.packages("extrafont")
install.packages("extrafont")
install.packages("extrafont")
library(extrafont)
font_import(pattern = "Malgun")
>>>>>>> c9dbe732cfa57e7711628e9f6a5833b544ff2268
knitr::opts_chunk$set(echo = TRUE)
# 주어진 값들
sigma2 <- 10
mu0 <- 100
sigma2_0 <- 25
n <- 10
x_bar <- 110
# 사후분포의 평균
mu_posterior <- (sigma2_0 * x_bar + sigma2 * mu0) / (sigma2_0 + n * sigma2)
# 사후분포의 분산
sigma2_posterior_inverse <- n / sigma2 + 1 / sigma2_0
sigma2_posterior <- 1 / sigma2_posterior_inverse
# 결과 출력
cat("사후분포의 평균:", mu_posterior, "\n")
cat("사후분포의 분산:", sigma2_posterior, "\n")
# 결과 출력
cat("사후분포의 평균:", mu_posterior, "\n")
#prior
mu0 = 100; sig0 = 5; n = 10; xbar = 110; s = sqrt(10/n)
#posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
ta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
lines(theta,dnorm(theta,mu0,sig0),lty=2)
legend(7.5,0.3,legend=c("posterior","prior"),lty=c(1,2),bty="n")
#predictive
mu.new = mu.post; sig.new = sqrt( s^2 + sig.post^2 )
xnew=seq(mu.new - 5* sig.new , mu.new + 5* sig.new, length=100)
plot(xnew, dnorm(xnew, mu.new, sig.new),type="l", main="Predictivedensity of X_new")
#prior
mu0 = 100; sig0 = 5; n = 10; xbar = 110; s = sqrt(10/n)
#posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
lines(theta,dnorm(theta,mu0,sig0),lty=2)
legend(7.5,0.3,legend=c("posterior","prior"),lty=c(1,2),bty="n")
#predictive
mu.new = mu.post; sig.new = sqrt( s^2 + sig.post^2 )
xnew=seq(mu.new - 5* sig.new , mu.new + 5* sig.new, length=100)
plot(xnew, dnorm(xnew, mu.new, sig.new),type="l", main="Predictivedensity of X_new")
#prior
mu0 = 100; sig0 = 5; n = 10; xbar = 110; s = sqrt(10/n)
#posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
lines(theta,dnorm(theta,mu0,sig0),lty=2)
legend(7.5,0.3,legend=c("posterior","prior"),lty=c(1,2),bty="n")
#predictive
mu.new = mu.post; sig.new = sqrt( s^2 + sig.post^2 )
xnew=seq(mu.new - 5* sig.new , mu.new + 5* sig.new, length=100)
mu.new
xnew
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
lines(theta,dnorm(theta,mu0,sig0),lty=2)
#prior
mu0 = 100; sig0 = 5; n = 10; xbar = 110; s = sqrt(10/n)
#posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
# Call plot.new() before creating a plot
plot.new()
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
lines(theta,dnorm(theta,mu0,sig0),lty=2)
#predictive
mu.new = mu.post; sig.new = sqrt( s^2 + sig.post^2 )
xnew=seq(mu.new - 5* sig.new , mu.new + 5* sig.new, length=100)
# Call plot.new() again before creating a new plot
plot.new()
plot(xnew, dnorm(xnew, mu.new, sig.new),type="l", main="Predictive density of X_new")
mu0 = 100; sig0 = 5; n = 10; xbar = 110; s = sqrt(10/n)
#posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
lines(theta,dnorm(theta,mu0,sig0),lty=2)
legend(7.5,0.3,legend=c("posterior","prior"),lty=c(1,2),bty="n")
#predictive
mu.new = mu.post; sig.new = sqrt( s^2 + sig.post^2 )
xnew=seq(mu.new - 5* sig.new , mu.new + 5* sig.new, length=100)
mu.post
theta
mu.post
sig.post
mu.post
sig.post
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend(7.5,0.3,legend=c("posterior","prior"),lty=c(1,2),bty="n")
# prior
mu0 = 100; sig0 = 5; n = 10; xbar = 110; s = sqrt(10/n)
# posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend(7.5,0.3,legend=c("posterior","prior"),lty=c(1,2),bty="n")
# prior
mu0 = 150; sig0 = sqrt(21); n = 20; xbar = 150; s = sqrt(21/n)
# posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend(7.5,0.3,legend=c("posterior","prior"),lty=c(1,2),bty="n")
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend(7.5,0.3,legend=c("posterior"),lty=c(1,2),bty="n")
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend(7.5,0.3,legend=c("posterior"),lty=c(1,2),bty="n")
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend(7.5,0.3,legend=c("posterior"),lty=c(1),bty="n")
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend(7.5,0.3,legend=c("posterior"),lty=1,bty="n")
legend(7.5,0.3,legend=c("posterior"),lty= 1,bty="n")
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend(7.5,0.3,legend=c("posterior"),lty= 1,bty="n")
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend(7.5,0.3,legend=c("posterior"),lty= c(1),bty="n")
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend("topright",legend=c("posterior"),lty=c(1),bty="n")
mu.post
sig.post
# prior
mu0 = 150; sig0 = sqrt(21); n = 20; xbar = 150; s = sqrt(21)
# posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="posterior and prior of theta")
legend("topright",legend=c("posterior"),lty=c(1),bty="n")
```{r}
mu.post
sig.post
# Plotting only the posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
legend("topright",legend="posterior",lty=1,bty="n")
# prior
mu0 = 150; sig0 = sqrt(21); n = 20; xbar = 150; s = sqrt(21/n)
# posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
# Data frame for ggplot
df <- data.frame(theta=theta, density=dnorm(theta, mu.post, sig.post))
# Plot using ggplot
ggplot(data=df, aes(x=theta, y=density)) +
geom_line(color="blue") +
labs(title="Posterior of theta", y="Density") +
theme_minimal() +
annotate("text", x=max(df$theta) - 20, y=max(df$density) - 0.01, label="posterior", hjust="right")
legend("topright",legend="posterior",lty=c(1),bty="n")
legend("topright",legend="posterior",lty=c('1'),bty="n")
# Plotting only the posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
legend("topright",legend="posterior",lty=c('1'),bty="n")
# Plotting only the posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
legend("topright", legend=c("Random data"), col="red", lty=2, cex=0.8, bty="o")
# prior
mu0 = 150; sig0 = sqrt(21); n = 20; xbar = 150; s = sqrt(21/n)
# posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
# Data frame for ggplot
df <- data.frame(theta=theta, density=dnorm(theta, mu.post, sig.post))
# Plotting only the posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
legend("topright", legend=c("Random data"), col="red", lty=2, cex=0.8, bty="o")
legend("topright",legend="posterior",lty=c(1),bty="n")
# Plotting only the posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
legend("topright",legend="posterior",lty=c(1),bty="n")
# Plotting only the posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
legend("topright",legend="posterior",lty=c(1),bty="n")
# Plotting only the posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
legend("topright",legend="posterior",lty=c(1),bty="n")
HPDgrid(theta)
HPDgrid <- function(prob,level=0.95){
prob.sort=sort(prob,decreasing = T)
M=min(which(cumsum(prob.sort)>=level))
height=prob.sort[M]
HPD.index=which(prob>=height)
HPD.level=sum(prob[HPD.index])
res=list(index=HPD.index, level=HPD.level)
return(res)
}
HPDgrid(theta)
dnorm(theta, mu.post, sig.post)
dt
dt
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
dt = dnorm(theta, mu.post, sig.post)
dt
propdt = dt/sum(dt)
propdt
HPDgrid(propdt, 0.95)
HPD <- HPDgrid(propdt, 0.95)
HPD
2-(1)
```{r}
# prior
mu0 = 150; sig0 = sqrt(21); n = 20; xbar = 150; s = sqrt(21/n)
# posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
ftheta = dnorm(theta, mu.post, sig.post)
prob = dt/sum(dt)
# Plotting only the posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
legend("topright",legend="posterior",lty=c(1),bty="n")
HPDgrid <- function(prob,level=0.95){
prob.sort=sort(prob,decreasing = T)
M=min(which(cumsum(prob.sort)>=level))
height=prob.sort[M]
HPD.index=which(prob>=height)
HPD.level=sum(prob[HPD.index])
res=list(index=HPD.index, level=HPD.level)
return(res)
}
HPD <- HPDgrid(prob, 0.95)
HPD.grid=c( min(theta[HPD$index]), max(theta[HPD$index]) )
HPD.grid
prob = dt/sum(ftheta)
HPDgrid <- function(prob,level=0.95){
prob.sort=sort(prob,decreasing = T)
M=min(which(cumsum(prob.sort)>=level))
height=prob.sort[M]
HPD.index=which(prob>=height)
HPD.level=sum(prob[HPD.index])
res=list(index=HPD.index, level=HPD.level)
return(res)
}
HPD <- HPDgrid(prob, 0.95)
HPD.grid=c( min(theta[HPD$index]), max(theta[HPD$index]) )
HPD <- HPDgrid(prob, 0.95)
HPD.grid=c( min(theta[HPD$index]), max(theta[HPD$index]) )
HPD.grid
# Plotting only the posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
legend("topright",legend="posterior",lty=c(1),bty="n")
abline(v=HPD, lty=2, color = 'red')
abline(v=HPD, lty=2, col = 'red')
print(HPD)
HPD.grid
# No prior information: setting a vague prior
n = 20; xbar = 150; s = sqrt(21/n)
# posterior calculation remains the same
mu.post = xbar; sig.post = sqrt(1/n)
sig.post
mu.post
sig.post
# No prior information: setting a vague prior
n = 20; xbar = 150; s = sqrt(21/n)
# posterior calculation remains the same
mu.post = xbar; sig.post = sqrt(1/n)
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
ftheta = dnorm(theta, mu.post, sig.post)
prob = ftheta/sum(ftheta)
HPD <- HPDgrid(prob, 0.95)
HPD.grid=c( min(theta[HPD$index]), max(theta[HPD$index]) )
HPD.grid
# Plotting only the posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
abline(v=HPD.grid, lty=2, col="red")
legend("topright",legend="posterior",lty=c(1),bty="n")
HPD.grid
150 - 1.96 * s
HPD.grid
150 - 1.96 * s
150 + 1.96 * s
HPD.grid <- c(150 - 1.96 * s, 150 + 1.96 * s)
HPD.grid
HPD.grid
HPD.grid
# posterior calculation remains the same
mu.post = xbar; sig.post = sqrt(21/n)
sig.post
# 첫 번째 그래프 그리기
p1
# 첫 번째 그래프 그리기
p1
# prior
mu0 = 150; sig0 = sqrt(21); n = 20; xbar = 150; s = sqrt(21/n)
# posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
ftheta = dnorm(theta, mu.post, sig.post)
prob = ftheta/sum(ftheta)
HPDgrid <- function(prob,level=0.95){
prob.sort=sort(prob,decreasing = T)
M=min(which(cumsum(prob.sort)>=level))
height=prob.sort[M]
HPD.index=which(prob>=height)
HPD.level=sum(prob[HPD.index])
res=list(index=HPD.index, level=HPD.level)
return(res)
}
HPD <- HPDgrid(prob, 0.95)
HPD.grid=c( min(theta[HPD$index]), max(theta[HPD$index]) )
HPD.grid
# Plotting only the posterior distribution
p1 <- plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
abline(v=HPD.grid, lty=2, col="red")
# 첫 번째 그래프 그리기
p1
p1
# No prior information: setting a vague prior
n = 20; xbar = 150; s = sqrt(21/n)
# posterior calculation remains the same
mu.post_2 = xbar; sig.post_2 = sqrt(21/n)
theta_2=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
ftheta = dnorm(theta, mu.post, sig.post)
prob = ftheta/sum(ftheta)
HPD <- HPDgrid(prob, 0.95)
HPD.grid_2=c( min(theta[HPD$index]), max(theta[HPD$index]) )
HPD.grid_2
plot(theta_2, dnorm(theta_2,mu.post_2, sig.post_2), type="l",main="Posterior of theta", ylab="Density")
#predictive
mu.new = mu.post; sig.new = sqrt( s^2 + sig.post^2 )
xnew=seq(mu.new - 5* sig.new , mu.new + 5* sig.new, length=100)
plot(xnew, dnorm(xnew, mu.new, sig.new),type="l", main="Predictivedensity of X_new")
mu.post_2
sig.post_2
sig.post
# prior
mu0 = 150; sig0 = sqrt(21); n = 20 + 10; xbar = 150; s = sqrt(21/n)
```{r}
#predictive
mu.new = mu.post; sig.new = sqrt( s^2 + sig.post^2 )
xnew=seq(mu.new - 5* sig.new , mu.new + 5* sig.new, length=100)
plot(xnew, dnorm(xnew, mu.new, sig.new),type="l", main="Predictivedensity of X_new")
sig.new
prob = pnorm(153, mu.new, sig.new) - pnorm(150, mu.new, sig.new)
prob
# prior
mu0 = 150; sig0 = sqrt(21); n = 20; xbar = 150; s = sqrt(21/n)
# posterior
c= n/s^2 ; c0=1/sig0^2; w = c/(c+c0)
mu.post = w * xbar + (1-w)* mu0; sig.post = sqrt( 1/(c+c0) )
theta=seq(mu.post-5*sig.post, mu.post+5*sig.post, length=100)
```{r}
#predictive
mu.new = mu.post; sig.new = sqrt( s^2 + sig.post^2 )
xnew=seq(mu.new - 5* sig.new , mu.new + 5* sig.new, length=100)
plot(xnew, dnorm(xnew, mu.new, sig.new),type="l", main="Predictivedensity of X_new")
prob = pnorm(153, mu.new, sig.new) - pnorm(150, mu.new, sig.new)
prob
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
par(new=TRUE)
plot(theta_2, dnorm(theta_2,mu.post_2, sig.post_2), type="l",main="Posterior of theta", ylab="Density")
library(msm)
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
par(new=TRUE)
plot(theta_2, dnorm(theta_2,mu.post_2, sig.post_2), type="l",main="Posterior of theta", ylab="Density")
plot(theta, dnorm(theta,mu.post, sig.post), type="l",main="Posterior of theta", ylab="Density")
# First posterior distribution
plot(theta, dnorm(theta,mu.post, sig.post), type="l", main="Posterior of theta", ylab="Density")
plot(theta_2, dnorm(theta_2,mu.post_2, sig.post_2), type="l", axes=FALSE, xlab='', ylab='', col="red") # Assuming you want the second distribution in red color
# No prior information: setting a vague prior
n = 20; xbar = 150; s = sqrt(21/n)
# posterior calculation remains the same
mu.post_2 = xbar; sig.post_2 = sqrt(21/n)
theta_2=seq(mu.post_2-5*sig.post_2, mu.post_2+5*sig.post_2, length=100)
ftheta = dnorm(theta_2, mu.post_2, sig.post_2)
prob = ftheta/sum(ftheta)
HPD <- HPDgrid(prob, 0.95)
HPD.grid_2=c( min(theta_2[HPD$index]), max(theta_2[HPD$index]) )
HPD.grid_2
# 데이터 프레임 생성
df <- data.frame(
theta = c(theta_2, theta_2),
density = c(dnorm(theta_2, mu.post_2, sig.post_2), rep(NA, length(theta_2)))
)
# ggplot 그래프 생성
g <- ggplot(df, aes(x=theta, y=density)) +
geom_line(aes(y = dnorm(theta, mu.post_2, sig.post_2)), colour="black") +
geom_vline(aes(xintercept=HPD.grid_2[1]), linetype="dashed", color="red") +
geom_vline(aes(xintercept=HPD.grid_2[2]), linetype="dashed", color="red") +
labs(title="Posterior of theta", y="Density", x="theta_2") +
theme_minimal()
